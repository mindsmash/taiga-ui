(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{"iK5/":function(e,t,n){"use strict";n.r(t),n.d(t,"ExampleTuiInputCountModule",(function(){return oe}));var o=n("2kYt"),a=n("nIj0"),r=n("sEIs"),i=n("SVIu"),l=n("Qq0t"),u=n("dvRg"),m=n("Piem"),c=n("EM62"),p=n("K/iL"),d=n("WupT"),s=n("OZlg"),f=n("e0eB"),b=n("iyc4"),C=n("1Nkj"),y=n("okGw"),x=n("gEyt");const g=["label","Step is 1 by default"],T=["label","Step is 100"];let h=(()=>{class e{constructor(){this.testForm=new a.FormGroup({testValue1:new a.FormControl(10,a.Validators.required),testValue2:new a.FormControl(10,a.Validators.required)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-count-example-1"]],decls:8,vars:5,consts:[[1,"b-form",3,"formGroup"],["tuiLabel","",6,"label"],["formControlName","testValue1",3,"min","max"],["tuiLabel","",1,"tui-space_top-4",6,"label"],["formControlName","testValue2",3,"tuiTextfieldLabelOutside","step"]],template:function(e,t){1&e&&(c["\u0275\u0275elementStart"](0,"form",0),c["\u0275\u0275elementStart"](1,"label",1),c["\u0275\u0275i18nAttributes"](2,g),c["\u0275\u0275elementStart"](3,"tui-input-count",2),c["\u0275\u0275text"](4," Count something "),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](5,"label",3),c["\u0275\u0275i18nAttributes"](6,T),c["\u0275\u0275element"](7,"tui-input-count",4),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"]()),2&e&&(c["\u0275\u0275property"]("formGroup",t.testForm),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("min",1)("max",200),c["\u0275\u0275advance"](4),c["\u0275\u0275property"]("tuiTextfieldLabelOutside",!0)("step",100))},directives:[a["\u0275angular_packages_forms_forms_y"],a.NgControlStatusGroup,a.FormGroupDirective,C.a,y.a,a.NgControlStatus,a.FormControlName,x.b],encapsulation:2,changeDetection:0}),e})();var S=n("2wTY");const V=["label","Step is 1 by default"],E=["label","Step is 100"];let F=(()=>{class e{constructor(){this.testForm=new a.FormGroup({testValue1:new a.FormControl(10,a.Validators.required),testValue2:new a.FormControl(10,a.Validators.required)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-count-example-2"]],decls:7,vars:6,consts:[[1,"b-form",3,"formGroup"],["tuiLabel","",6,"label"],["formControlName","testValue1","tuiTextfieldSize","m",3,"max","tuiTextfieldLabelOutside"],["tuiLabel","",1,"tui-space_top-4",6,"label"],["formControlName","testValue2","tuiTextfieldSize","m",3,"step","max","tuiTextfieldLabelOutside"]],template:function(e,t){1&e&&(c["\u0275\u0275elementStart"](0,"form",0),c["\u0275\u0275elementStart"](1,"label",1),c["\u0275\u0275i18nAttributes"](2,V),c["\u0275\u0275element"](3,"tui-input-count",2),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](4,"label",3),c["\u0275\u0275i18nAttributes"](5,E),c["\u0275\u0275element"](6,"tui-input-count",4),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"]()),2&e&&(c["\u0275\u0275property"]("formGroup",t.testForm),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("max",999999)("tuiTextfieldLabelOutside",!0),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("step",100)("max",999999)("tuiTextfieldLabelOutside",!0))},directives:[a["\u0275angular_packages_forms_forms_y"],a.NgControlStatusGroup,a.FormGroupDirective,C.a,y.a,a.NgControlStatus,a.FormControlName,S.b,x.b],encapsulation:2,changeDetection:0}),e})();var P,v,w,_=n("EPR0"),O=n("yHor"),G=n("zGJC"),z=n("FSyC"),L=n("u8jZ");P="" + "\ufffd#2\ufffd" + "InputCount" + "\ufffd/#2\ufffd" + " is a good choice to input integer positive numbers under 999 ",v=" It allows limit value with min and max and handles such cases ",w="It does not indicate validation status";const M=["heading","Basic"],$=["heading","Size M"];function D(e,t){if(1&e&&(c["\u0275\u0275elementStart"](0,"div",2),c["\u0275\u0275i18nStart"](1,P),c["\u0275\u0275element"](2,"code"),c["\u0275\u0275i18nEnd"](),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](3,"div",2),c["\u0275\u0275i18n"](4,v),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](5,"p"),c["\u0275\u0275i18n"](6,w),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](7,"tui-doc-example",3),c["\u0275\u0275i18nAttributes"](8,M),c["\u0275\u0275element"](9,"tui-input-count-example-1"),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](10,"tui-doc-example",4),c["\u0275\u0275i18nAttributes"](11,$),c["\u0275\u0275element"](12,"tui-input-count-example-2"),c["\u0275\u0275elementEnd"]()),2&e){const e=c["\u0275\u0275nextContext"]();c["\u0275\u0275advance"](7),c["\u0275\u0275property"]("content",e.example1),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("content",e.example2)}}function A(e,t){if(1&e&&(c["\u0275\u0275elementStart"](0,"tui-input-count",12),c["\u0275\u0275text"](1," Number of accounts "),c["\u0275\u0275elementEnd"]()),2&e){const e=c["\u0275\u0275nextContext"](2);c["\u0275\u0275property"]("formControl",e.control)("focusable",e.focusable)("min",e.min)("max",e.max)("hideButtons",e.hideButtons)("step",e.step)("postfix",e.postfix)("readOnly",e.readOnly)("tuiTextfieldLabelOutside",e.labelOutside)("tuiTextfieldSize",e.size)}}var N,I,R,k,q,B,j,H,J;function K(e,t){1&e&&(c["\u0275\u0275i18nStart"](0,N),c["\u0275\u0275element"](1,"code"),c["\u0275\u0275i18nEnd"]())}function U(e,t){1&e&&c["\u0275\u0275i18n"](0,I)}function Y(e,t){1&e&&c["\u0275\u0275i18n"](0,R)}function Z(e,t){1&e&&(c["\u0275\u0275i18nStart"](0,k),c["\u0275\u0275element"](1,"code"),c["\u0275\u0275i18nEnd"]())}function Q(e,t){1&e&&c["\u0275\u0275i18n"](0,q)}function W(e,t){1&e&&c["\u0275\u0275i18n"](0,B)}function X(e,t){if(1&e){const e=c["\u0275\u0275getCurrentView"]();c["\u0275\u0275elementStart"](0,"tui-doc-demo",5),c["\u0275\u0275template"](1,A,2,10,"ng-template"),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](2,"tui-doc-documentation"),c["\u0275\u0275template"](3,K,2,0,"ng-template",6),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().disabled=t})),c["\u0275\u0275template"](4,U,1,0,"ng-template",7),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().hideButtons=t})),c["\u0275\u0275template"](5,Y,1,0,"ng-template",8),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().min=t})),c["\u0275\u0275template"](6,Z,2,0,"ng-template",9),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().max=t})),c["\u0275\u0275template"](7,Q,1,0,"ng-template",10),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().postfix=t})),c["\u0275\u0275template"](8,W,1,0,"ng-template",11),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().step=t})),c["\u0275\u0275elementEnd"](),c["\u0275\u0275element"](9,"inherited-documentation")}if(2&e){const e=c["\u0275\u0275nextContext"]();c["\u0275\u0275property"]("control",e.control),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("documentationPropertyValue",e.disabled),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.hideButtons),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.min),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.max),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.postfix),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.step)("documentationPropertyValues",e.stepValues)}}function ee(e,t){if(1&e&&(c["\u0275\u0275elementStart"](0,"ol",13),c["\u0275\u0275elementStart"](1,"li"),c["\u0275\u0275elementStart"](2,"p"),c["\u0275\u0275i18nStart"](3,j),c["\u0275\u0275element"](4,"code"),c["\u0275\u0275i18nEnd"](),c["\u0275\u0275elementEnd"](),c["\u0275\u0275element"](5,"tui-doc-code",14),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](6,"li"),c["\u0275\u0275elementStart"](7,"p"),c["\u0275\u0275i18nStart"](8,H),c["\u0275\u0275element"](9,"code"),c["\u0275\u0275element"](10,"code"),c["\u0275\u0275i18nEnd"](),c["\u0275\u0275elementEnd"](),c["\u0275\u0275element"](11,"tui-doc-code",15),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](12,"li"),c["\u0275\u0275elementStart"](13,"p"),c["\u0275\u0275i18n"](14,J),c["\u0275\u0275elementEnd"](),c["\u0275\u0275element"](15,"tui-doc-code",16),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"]()),2&e){const e=c["\u0275\u0275nextContext"]();c["\u0275\u0275advance"](5),c["\u0275\u0275property"]("code",e.exampleImportModule),c["\u0275\u0275advance"](6),c["\u0275\u0275property"]("code",e.exampleDeclareForm),c["\u0275\u0275advance"](4),c["\u0275\u0275property"]("code",e.exampleInsertTemplate)}}N=" Disabled state (use " + "\ufffd#1\ufffd" + "formControl.disable()" + "\ufffd/#1\ufffd" + ") ",I=" Hide icon buttons ",R=" Minimum value ",k=" Maximum value (" + "\ufffd#1\ufffd" + "Infinity" + "\ufffd/#1\ufffd" + " by default) ",q=" Some string after value ",B=" Step for buttons ",j=" Import an Angular module for forms and " + "\ufffd#4\ufffd" + "TuiInputCountModule" + "\ufffd/#4\ufffd" + " in the same module where you want to use our component: ",H=" Declare a form (" + "[\ufffd#9\ufffd|\ufffd#10\ufffd]" + "FormGroup" + "[\ufffd/#9\ufffd|\ufffd/#10\ufffd]" + ") or a control (" + "[\ufffd#9\ufffd|\ufffd#10\ufffd]" + "FormControl" + "[\ufffd/#9\ufffd|\ufffd/#10\ufffd]" + ") in your component: ",H=c["\u0275\u0275i18nPostprocess"](H),J="Add to the template:";let te=(()=>{class e extends d.a{constructor(){super(...arguments),this.exampleDeclareForm="import {FormControl, FormGroup} from '@angular/forms';\n\n...\n\n@Component({\n...\n})\nexport class MyComponent {\n    testForm = new FormGroup({\n        testValue: new FormControl(10)\n    });\n}\n",this.exampleImportModule="import {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TuiInputCountModule} from '@taiga-ui/kit';\n\n...\n\n@NgModule({\n    imports: [\n        ...\n        FormsModule,\n        ReactiveFormsModule,\n        TuiInputCountModule\n    ],\n...\n",this.exampleInsertTemplate='<ng-container [formGroup]="testForm">\n    <tui-input-count formControlName="testValue"></tui-input-count>\n</ng-container>\n',this.example1={HTML:'<form class="b-form" [formGroup]="testForm">\n    <label tuiLabel i18n-label label="Step is 1 by default">\n        <tui-input-count formControlName="testValue1" [min]="1" [max]="200">\n            Count something\n        </tui-input-count>\n    </label>\n\n    <label tuiLabel class="tui-space_top-4" i18n-label label="Step is 100">\n        <tui-input-count\n            formControlName="testValue2"\n            [tuiTextfieldLabelOutside]="true"\n            [step]="100"\n        ></tui-input-count>\n    </label>\n</form>\n',TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\n@Component({\n    selector: 'tui-input-count-example-1',\n    templateUrl: './index.html',\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputCountExample1 {\n    readonly testForm = new FormGroup({\n        testValue1: new FormControl(10, Validators.required),\n        testValue2: new FormControl(10, Validators.required),\n    });\n}\n"},this.example2={HTML:'<form class="b-form" [formGroup]="testForm">\n    <label tuiLabel i18n-label label="Step is 1 by default">\n        <tui-input-count\n            formControlName="testValue1"\n            tuiTextfieldSize="m"\n            [max]="999999"\n            [tuiTextfieldLabelOutside]="true"\n        ></tui-input-count>\n    </label>\n\n    <label tuiLabel class="tui-space_top-4" i18n-label label="Step is 100">\n        <tui-input-count\n            formControlName="testValue2"\n            tuiTextfieldSize="m"\n            [step]="100"\n            [max]="999999"\n            [tuiTextfieldLabelOutside]="true"\n        ></tui-input-count>\n    </label>\n</form>\n',TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\n@Component({\n    selector: 'tui-input-count-example-2',\n    templateUrl: './index.html',\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputCountExample2 {\n    testForm = new FormGroup({\n        testValue1: new FormControl(10, Validators.required),\n        testValue2: new FormControl(10, Validators.required),\n    });\n}\n"},this.min=0,this.max=999,this.step=1,this.stepValues=[1,2,3,4,5],this.sizeVariants=["m","l"],this.size=this.sizeVariants[1],this.hideButtons=!1,this.control=new a.FormControl,this.postfix=""}}return e.\u0275fac=function(t){return ne(t||e)},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["example-tui-input-count"]],features:[c["\u0275\u0275ProvidersFeature"]([{provide:p.a,useExisting:Object(c.forwardRef)(()=>e)}]),c["\u0275\u0275InheritDefinitionFeature"]],decls:4,vars:0,consts:[["header","InputCount","package","KIT"],["pageTab",""],[1,"tui-space_bottom-3"],["id","base",3,"content",6,"heading"],["id","medium-large",3,"content",6,"heading"],[3,"control"],["documentationPropertyName","","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","hideButtons","documentationPropertyMode","input","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","min","documentationPropertyMode","input","documentationPropertyType","number",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","max","documentationPropertyMode","input","documentationPropertyType","number",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","postfix","documentationPropertyMode","input","documentationPropertyType","string",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","step","documentationPropertyMode","input","documentationPropertyType","number",3,"documentationPropertyValue","documentationPropertyValues","documentationPropertyValueChange"],[3,"formControl","focusable","min","max","hideButtons","step","postfix","readOnly","tuiTextfieldLabelOutside","tuiTextfieldSize"],[1,"b-demo-steps"],["filename","myComponent.module.ts",3,"code"],["filename","myComponent.component.ts",3,"code"],["filename","myComponent.template.html",3,"code"]],template:function(e,t){1&e&&(c["\u0275\u0275elementStart"](0,"tui-doc-page",0),c["\u0275\u0275template"](1,D,13,2,"ng-template",1),c["\u0275\u0275template"](2,X,10,8,"ng-template",1),c["\u0275\u0275template"](3,ee,16,3,"ng-template",1),c["\u0275\u0275elementEnd"]())},directives:[s.a,f.a,b.a,h,F,_.a,O.a,G.a,z.a,y.a,a.NgControlStatus,a.FormControlDirective,x.b,S.b,L.a],encapsulation:2,changeDetection:0}),e})();const ne=c["\u0275\u0275getInheritedFactory"](te);let oe=(()=>{class e{}return e.\u0275mod=c["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=c["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[o.c,a.FormsModule,a.ReactiveFormsModule,u.TuiInputCountModule,l.TuiLabelModule,l.TuiLinkModule,...i.e,l.TuiTextfieldControllerModule,m.a,r.f.forChild(Object(i.n)(te))]]}),e})()}}]);