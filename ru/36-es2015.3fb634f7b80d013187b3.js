(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{jHdR:function(e,t,o){"use strict";o.r(t),o.d(t,"ExampleTuiCheckboxLabeledModule",(function(){return Z}));var n=o("2kYt"),a=o("nIj0"),r=o("sEIs"),l=o("SVIu"),c=o("Qq0t"),i=o("dvRg"),m=o("DgXe"),s=o("Piem"),d=o("EM62"),u=o("yPof"),p=o("K/iL"),b=o("WupT"),f=o("OZlg"),C=o("e0eB"),x=o("yZWP"),h=o("iyc4"),y=o("D+uv");let g=(()=>{class e{constructor(){this.testForm=new a.FormGroup({testValue1:new a.FormControl(!0),testValue2:new a.FormControl(!1),testValue3:new a.FormControl(!1)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=d["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-checkbox-labeled-example-1"]],decls:13,vars:1,consts:[[3,"formGroup"],["formControlName","testValue1"],[1,"example"],["formControlName","testValue2",1,"tui-space_top-3"],["formControlName","testValue3",1,"tui-space_top-3"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"form",0),d["\u0275\u0275elementStart"](1,"tui-checkbox-labeled",1),d["\u0275\u0275text"](2," Taiga UI "),d["\u0275\u0275elementStart"](3,"div",2),d["\u0275\u0275text"](4,"Angular UI Kit for awesome people"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](5,"tui-checkbox-labeled",3),d["\u0275\u0275text"](6," ng-polymorpheus "),d["\u0275\u0275elementStart"](7,"div",2),d["\u0275\u0275text"](8," A tiny library for polymorphic templates in Angular. "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](9,"tui-checkbox-labeled",4),d["\u0275\u0275text"](10," ng-dompurify "),d["\u0275\u0275elementStart"](11,"div",2),d["\u0275\u0275text"](12,"Inclusive Angular API for DOMPurify"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]()),2&e&&d["\u0275\u0275property"]("formGroup",t.testForm)},directives:[a["\u0275angular_packages_forms_forms_y"],a.NgControlStatusGroup,a.FormGroupDirective,y.a,a.NgControlStatus,a.FormControlName],styles:[".example[_ngcontent-%COMP%]{color:var(--tui-text-03)}"],changeDetection:0}),e})();var v,F,E;v=" An option ",F=" An alternative one ",E=" Other ";let S=(()=>{class e{constructor(){this.testForm=new a.FormGroup({testValue1:new a.FormControl(!0),testValue2:new a.FormControl(!1),testValue3:new a.FormControl(!1)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=d["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-checkbox-labeled-example-2"]],decls:7,vars:1,consts:[[3,"formGroup"],["formControlName","testValue1","size","l"],["formControlName","testValue2","size","l",1,"tui-space_top-5"],["formControlName","testValue3","size","l",1,"tui-space_top-5"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"form",0),d["\u0275\u0275elementStart"](1,"tui-checkbox-labeled",1),d["\u0275\u0275i18n"](2,v),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](3,"tui-checkbox-labeled",2),d["\u0275\u0275i18n"](4,F),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](5,"tui-checkbox-labeled",3),d["\u0275\u0275i18n"](6,E),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]()),2&e&&d["\u0275\u0275property"]("formGroup",t.testForm)},directives:[a["\u0275angular_packages_forms_forms_y"],a.NgControlStatusGroup,a.FormGroupDirective,y.a,a.NgControlStatus,a.FormControlName],encapsulation:2,changeDetection:0}),e})();var k,_=o("EPR0"),T=o("yHor"),V=o("zGJC"),w=o("FSyC"),A=o("u8jZ");k="" + "[\ufffd#2\ufffd|\ufffd#3\ufffd|\ufffd#5\ufffd]" + "CheckboxLabeled" + "[\ufffd/#2\ufffd|\ufffd/#3\ufffd|\ufffd/#5\ufffd]" + " is a " + "[\ufffd#2\ufffd|\ufffd#3\ufffd|\ufffd#5\ufffd]" + "Checkbox" + "[\ufffd/#2\ufffd|\ufffd/#3\ufffd|\ufffd/#5\ufffd]" + " with a label. Click on label changes checkbox state. If you do not need a label, see " + "\ufffd#4\ufffd" + "" + "[\ufffd#2\ufffd|\ufffd#3\ufffd|\ufffd#5\ufffd]" + "Checkbox" + "[\ufffd/#2\ufffd|\ufffd/#3\ufffd|\ufffd/#5\ufffd]" + "" + "\ufffd/#4\ufffd" + ". ",k=d["\u0275\u0275i18nPostprocess"](k);const z=["heading","Basic"],G=["heading","Big size"];function O(e,t){if(1&e&&(d["\u0275\u0275elementStart"](0,"div",2),d["\u0275\u0275i18nStart"](1,k),d["\u0275\u0275element"](2,"code"),d["\u0275\u0275element"](3,"code"),d["\u0275\u0275elementStart"](4,"a",3),d["\u0275\u0275element"](5,"code"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275i18nEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](6,"tui-doc-example",4),d["\u0275\u0275i18nAttributes"](7,z),d["\u0275\u0275element"](8,"tui-checkbox-labeled-example-1"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](9,"tui-doc-example",5),d["\u0275\u0275i18nAttributes"](10,G),d["\u0275\u0275element"](11,"tui-checkbox-labeled-example-2"),d["\u0275\u0275elementEnd"]()),2&e){const e=d["\u0275\u0275nextContext"]();d["\u0275\u0275advance"](6),d["\u0275\u0275property"]("content",e.example1),d["\u0275\u0275advance"](3),d["\u0275\u0275property"]("content",e.example2)}}var P,D,I,N,$,L,M,R;function H(e,t){if(1&e&&(d["\u0275\u0275elementStart"](0,"form",9),d["\u0275\u0275elementStart"](1,"tui-checkbox-labeled",10),d["\u0275\u0275i18n"](2,P),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](3,"tui-checkbox-labeled",11),d["\u0275\u0275i18n"](4,D),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](5,"tui-checkbox-labeled",12),d["\u0275\u0275i18n"](6,I),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]()),2&e){const e=d["\u0275\u0275nextContext"](2);d["\u0275\u0275property"]("formGroup",e.control),d["\u0275\u0275advance"](1),d["\u0275\u0275property"]("focusable",e.focusable)("pseudoInvalid",e.pseudoInvalid)("pseudoFocused",e.pseudoFocused)("pseudoHovered",e.pseudoHovered)("pseudoPressed",e.pseudoPressed)("readOnly",e.readOnly)("size",e.size),d["\u0275\u0275advance"](2),d["\u0275\u0275property"]("focusable",e.focusable)("pseudoInvalid",e.pseudoInvalid)("pseudoFocused",e.pseudoFocused)("pseudoHovered",e.pseudoHovered)("pseudoPressed",e.pseudoPressed)("readOnly",e.readOnly)("size",e.size),d["\u0275\u0275advance"](2),d["\u0275\u0275property"]("focusable",e.focusable)("pseudoInvalid",e.pseudoInvalid)("pseudoFocused",e.pseudoFocused)("pseudoHovered",e.pseudoHovered)("pseudoPressed",e.pseudoPressed)("readOnly",e.readOnly)("size",e.size)}}function j(e,t){1&e&&(d["\u0275\u0275i18nStart"](0,N),d["\u0275\u0275element"](1,"code"),d["\u0275\u0275i18nEnd"]())}function U(e,t){1&e&&d["\u0275\u0275i18n"](0,$)}function K(e,t){if(1&e){const e=d["\u0275\u0275getCurrentView"]();d["\u0275\u0275elementStart"](0,"tui-doc-demo",6),d["\u0275\u0275template"](1,H,7,22,"ng-template"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](2,"tui-doc-documentation"),d["\u0275\u0275template"](3,j,2,0,"ng-template",7),d["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return d["\u0275\u0275restoreView"](e),d["\u0275\u0275nextContext"]().disabled=t})),d["\u0275\u0275template"](4,U,1,0,"ng-template",8),d["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return d["\u0275\u0275restoreView"](e),d["\u0275\u0275nextContext"]().size=t})),d["\u0275\u0275elementEnd"](),d["\u0275\u0275element"](5,"inherited-documentation")}if(2&e){const e=d["\u0275\u0275nextContext"]();d["\u0275\u0275property"]("control",e.control),d["\u0275\u0275advance"](3),d["\u0275\u0275property"]("documentationPropertyValue",e.disabled),d["\u0275\u0275advance"](1),d["\u0275\u0275property"]("documentationPropertyValues",e.sizeVariants)("documentationPropertyValue",e.size)}}function B(e,t){if(1&e&&(d["\u0275\u0275elementStart"](0,"ol",13),d["\u0275\u0275elementStart"](1,"li"),d["\u0275\u0275elementStart"](2,"p"),d["\u0275\u0275i18nStart"](3,L),d["\u0275\u0275element"](4,"code"),d["\u0275\u0275i18nEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275element"](5,"tui-doc-code",14),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](6,"li"),d["\u0275\u0275elementStart"](7,"p"),d["\u0275\u0275i18nStart"](8,M),d["\u0275\u0275element"](9,"code"),d["\u0275\u0275element"](10,"code"),d["\u0275\u0275i18nEnd"](),d["\u0275\u0275elementEnd"](),d["\u0275\u0275element"](11,"tui-doc-code",15),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementStart"](12,"li"),d["\u0275\u0275elementStart"](13,"p"),d["\u0275\u0275i18n"](14,R),d["\u0275\u0275elementEnd"](),d["\u0275\u0275element"](15,"tui-doc-code",16),d["\u0275\u0275elementEnd"](),d["\u0275\u0275elementEnd"]()),2&e){const e=d["\u0275\u0275nextContext"]();d["\u0275\u0275advance"](5),d["\u0275\u0275property"]("code",e.exampleImportModule),d["\u0275\u0275advance"](6),d["\u0275\u0275property"]("code",e.exampleDeclareForm),d["\u0275\u0275advance"](4),d["\u0275\u0275property"]("code",e.exampleInsertTemplate)}}P=" An option ",D=" An alternative one ",I=" Other ",N=" Disabled state (use " + "\ufffd#1\ufffd" + "formControl.disable()" + "\ufffd/#1\ufffd" + ") ",$=" Size ",L=" Import an Angular module for forms and " + "\ufffd#4\ufffd" + "TuiCheckboxLabeledModule" + "\ufffd/#4\ufffd" + " in the same module where you want to use our component: ",M=" Declare a form (" + "[\ufffd#9\ufffd|\ufffd#10\ufffd]" + "FormGroup" + "[\ufffd/#9\ufffd|\ufffd/#10\ufffd]" + ") or a control (" + "[\ufffd#9\ufffd|\ufffd#10\ufffd]" + "FormControl" + "[\ufffd/#9\ufffd|\ufffd/#10\ufffd]" + ") in your component: ",M=d["\u0275\u0275i18nPostprocess"](M),R="Add to the template:";let J=(()=>{class e extends b.a{constructor(e){super(),this.howToResolver=e,this.exampleDeclareForm="import {FormControl, FormGroup} from '@angular/forms';\n\n...\n\n@Component({\n    ...\n})\nexport class MyComponent {\n    testForm = new FormGroup({\n        testValue: new FormControl()\n    });\n}\n",this.exampleImportModule="import {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TuiCheckboxLabeledModule} from '@taiga-ui/kit';\n\n...\n\n@NgModule({\n    imports: [\n        ...\n        FormsModule,\n        ReactiveFormsModule,\n        TuiCheckboxLabeledModule\n    ],\n...\n",this.exampleInsertTemplate='<div [formGroup]="testForm">\n    <tui-checkbox-labeled formControlName="testValue">Label</tui-checkbox-labeled>\n</div>\n',this.example1={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\n@Component({\n    selector: 'tui-checkbox-labeled-example-1',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiCheckboxLabeledExample1 {\n    testForm = new FormGroup({\n        testValue1: new FormControl(true),\n        testValue2: new FormControl(false),\n        testValue3: new FormControl(false),\n    });\n}\n",HTML:'<form [formGroup]="testForm">\n    <tui-checkbox-labeled formControlName="testValue1">\n        Taiga UI\n        <div class="example">Angular UI Kit for awesome people</div>\n    </tui-checkbox-labeled>\n\n    <tui-checkbox-labeled class="tui-space_top-3" formControlName="testValue2">\n        ng-polymorpheus\n        <div class="example">\n            A tiny library for polymorphic templates in Angular.\n        </div>\n    </tui-checkbox-labeled>\n\n    <tui-checkbox-labeled class="tui-space_top-3" formControlName="testValue3">\n        ng-dompurify\n        <div class="example">Inclusive Angular API for DOMPurify</div>\n    </tui-checkbox-labeled>\n</form>\n',LESS:".example {\n    color: var(--tui-text-03);\n}\n"},this.example2={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\n@Component({\n    selector: 'tui-checkbox-labeled-example-2',\n    templateUrl: './index.html',\n    changeDetection,\n    encapsulation,\n})\nexport class TuiCheckboxLabeledExample2 {\n    testForm = new FormGroup({\n        testValue1: new FormControl(true),\n        testValue2: new FormControl(false),\n        testValue3: new FormControl(false),\n    });\n}\n",HTML:'<form [formGroup]="testForm">\n    <tui-checkbox-labeled i18n formControlName="testValue1" size="l">\n        An option\n    </tui-checkbox-labeled>\n    <tui-checkbox-labeled\n        i18n\n        class="tui-space_top-5"\n        formControlName="testValue2"\n        size="l"\n    >\n        An alternative one\n    </tui-checkbox-labeled>\n    <tui-checkbox-labeled\n        i18n\n        class="tui-space_top-5"\n        formControlName="testValue3"\n        size="l"\n    >\n        Other\n    </tui-checkbox-labeled>\n</form>\n'},this.sizeVariants=["m","l"],this.size=this.sizeVariants[0],this.control=new a.FormGroup({testValue1:new a.FormControl(!1),testValue2:new a.FormControl,testValue3:new a.FormControl(!0)})}}return e.\u0275fac=function(t){return new(t||e)(d["\u0275\u0275directiveInject"](u.a))},e.\u0275cmp=d["\u0275\u0275defineComponent"]({type:e,selectors:[["example-tui-checkbox-labeled"]],features:[d["\u0275\u0275ProvidersFeature"]([{provide:p.a,useExisting:Object(d.forwardRef)(()=>e)}]),d["\u0275\u0275InheritDefinitionFeature"]],decls:4,vars:0,consts:[["header","CheckboxLabeled","package","KIT"],["pageTab",""],[1,"tui-space_bottom-3"],["tuiLink","","routerLink","/tui-checkbox"],["id","base",3,"content",6,"heading"],["id","large",3,"content",6,"heading"],[3,"control"],["documentationPropertyName","","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","size","documentationPropertyMode","input","documentationPropertyType","TuiSizeL",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],[3,"formGroup"],["formControlName","testValue1",3,"focusable","pseudoInvalid","pseudoFocused","pseudoHovered","pseudoPressed","readOnly","size"],["formControlName","testValue2",1,"tui-space_top-2",3,"focusable","pseudoInvalid","pseudoFocused","pseudoHovered","pseudoPressed","readOnly","size"],["formControlName","testValue3",1,"tui-space_top-2",3,"focusable","pseudoInvalid","pseudoFocused","pseudoHovered","pseudoPressed","readOnly","size"],[1,"b-demo-steps"],["filename","myComponent.module.ts",3,"code"],["filename","myComponent.component.ts",3,"code"],["filename","myComponent.template.html",3,"code"]],template:function(e,t){1&e&&(d["\u0275\u0275elementStart"](0,"tui-doc-page",0),d["\u0275\u0275template"](1,O,12,2,"ng-template",1),d["\u0275\u0275template"](2,K,6,4,"ng-template",1),d["\u0275\u0275template"](3,B,16,3,"ng-template",1),d["\u0275\u0275elementEnd"]())},directives:[f.a,C.a,x.a,r.e,h.a,g,S,_.a,T.a,V.a,w.a,a["\u0275angular_packages_forms_forms_y"],a.NgControlStatusGroup,a.FormGroupDirective,y.a,a.NgControlStatus,a.FormControlName,A.a],encapsulation:2,changeDetection:0}),e})(),Z=(()=>{class e{}return e.\u0275mod=d["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=d["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[n.c,a.FormsModule,a.ReactiveFormsModule,r.f,m.b,i.TuiCheckboxLabeledModule,c.TuiLinkModule,...l.d,s.a,r.f.forChild(Object(l.m)(J))]]}),e})()}}]);